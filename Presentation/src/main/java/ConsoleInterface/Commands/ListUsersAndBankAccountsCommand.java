package ConsoleInterface.Commands;

import Model.BankAccount;
import Model.User;
import Service.UserService;
import repository.UserRepository;

/**
 * –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∏—Ö –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö —Å—á–µ—Ç–æ–≤.
 * <p>
 * –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, –∞ —Ç–∞–∫–∂–µ —Å–ø–∏—Å–æ–∫ –∏—Ö –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö —Å—á–µ—Ç–æ–≤
 * –∏ –±–∞–ª–∞–Ω—Å–æ–≤. –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç —Å—á–µ—Ç–æ–≤, –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
 * </p>
 */
public class ListUsersAndBankAccountsCommand implements IConsoleCommand {
    private final UserRepository userRepository;

    /**
     * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—Å–∞ {@link ListUsersAndBankAccountsCommand}.
     *
     * @param userRepository –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
     */
    public ListUsersAndBankAccountsCommand(UserRepository userRepository) {
        this.userRepository = userRepository;
    }

    /**
     * –í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É, –≤—ã–≤–æ–¥—è —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∏—Ö –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö —Å—á–µ—Ç–æ–≤ –≤ –∫–æ–Ω—Å–æ–ª—å.
     * –î–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è:
     * <ul>
     *   <li>–õ–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</li>
     *   <li>–ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç —Å—á–µ—Ç–æ–≤, –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ "–ù–µ—Ç —Å—á–µ—Ç–æ–≤"</li>
     *   <li>–ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å —Å—á–µ—Ç–∞, –≤—ã–≤–æ–¥—è—Ç—Å—è –∏—Ö ID –∏ –±–∞–ª–∞–Ω—Å</li>
     * </ul>
     */
    @Override
    public void execute() {
        System.out.println("–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∏—Ö –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö —Å—á–µ—Ç–æ–≤:");
        UserService userService = new UserService(userRepository);
        for (User user : userService.GetAllUsers()) {
            System.out.println("üë§ " + user.getLogin());
            if (user.getBankAccounts().isEmpty()) {
                System.out.println("   ‚ùå –ù–µ—Ç —Å—á–µ—Ç–æ–≤");
            } else {
                for (BankAccount account : user.getBankAccounts()) {
                    System.out.println("   üí≥ –°—á–µ—Ç ID: " + account.getId() + ", –ë–∞–ª–∞–Ω—Å: " + account.getBalance());
                }
            }
        }
    }
}
